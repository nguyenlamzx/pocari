package com.sff.utils{	import flash.display.MovieClip;	import flash.display.Loader;	import flash.events.*;	import flash.net.URLRequest;	import flash.display.BitmapData;	import flash.display.Bitmap;	import flash.geom.Matrix;		public class Caricatore extends MovieClip	{		private var my_root:MovieClip;				private var righe:int=4;		private var colonne:int=2;				private var id:int;		private var page:int;		private var scaling:Number=20;				private var loader:Loader;				private var scaleMatrix:Matrix;				private var bitmap_data:BitmapData;				public function Caricatore(m:MovieClip,n:int)		{			my_root=m;						id=n;						init();		}				private function init():void 		{			var url=my_root.url_array[id];			var request:URLRequest=new URLRequest(url);			loader=new Loader();			initListeners(loader.contentLoaderInfo);			loader.load(request);		}				private function initListeners(dispatcher:IEventDispatcher):void 		{			dispatcher.addEventListener(Event.COMPLETE,completato);			dispatcher.addEventListener(IOErrorEvent.IO_ERROR,seErrore);		}				private function completato(event:Event):void 		{			var my_bitmap=Bitmap(loader.content);			my_bitmap.smoothing=true;						var clip:MovieClip=new MovieClip();			clip.addChild(my_bitmap);									my_root.pics_array.push(clip);						//drawClip(clip);			//init2();			my_root.setUp();		}						private function seErrore(event:IOErrorEvent):void 		{			trace("ioErrorHandler: "+event);		}				private function removeListeners(dispatcher:IEventDispatcher):void 		{			dispatcher.removeEventListener(Event.COMPLETE,completato);			dispatcher.removeEventListener(IOErrorEvent.IO_ERROR,seErrore);		}				private function drawClip(m:MovieClip):void		{			m.graphics.lineStyle(2,0x000000,1);			m.graphics.drawRect(m.x,m.y,m.width,m.height);			//my_root.pre_mc.info_txt.text=(id+1).toString()+' / '+(my_root.url_array.length).toString();					}			}}